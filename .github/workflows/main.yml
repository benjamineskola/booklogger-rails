# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Ruby application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test app
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/github_actions
      BOOKLOGGER_PASSWORD: ${{ secrets.BOOKLOGGER_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
        id: setup-ruby
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Node dependencies
        run: |
          yarn install
          echo node_modules/.bin >> $GITHUB_PATH
      - uses: pre-commit/action@v3.0.0

  # deploy:
  #   name: Deploy app
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main'
  #   env:
  #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl deploy --remote-only
